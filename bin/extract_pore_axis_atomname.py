#!/usr/bin/python2.6
#$ -S /usr/bin/python2.6
#$ -cwd


from optparse import OptionParser
import sys
import re
import collections

def analyze_run(fn_in, fn_in_r, fn_out, fn_out_r, atomnames,
                f_begin,f_end):

    f_out = open(fn_out, 'w')
    f_out_r = open(fn_out_r, 'w')

    f_in = open(fn_in, 'r')
    f_in_r = open(fn_in_r, 'r')
    header_line = f_in.readline()
    buf = f_in_r.readline()

    atoms_st = re.compile("\s+").split(header_line.strip())
    t_column = []
    target_atoms = []
    for i,atom in enumerate(atoms_st):
        atomid, atomname = re.compile(":").split(atom)
        if atomname in atomnames:
            t_column.append(i)
            target_atoms.append(atom)
    f_out.write('\t'.join(target_atoms)+'\n')
    f_out_r.write('\t'.join(target_atoms)+'\n')


    for line in f_in:
        line_r = f_in_r.readline()

        terms = re.compile("\s+").split(line)
        terms_r = re.compile("\s+").split(line_r)

        frame = int(float(terms[0]))
        if f_begin > 0 and frame < f_begin: continue
        if f_end > 0 and frame > f_end: break

        new_line = terms[0]
        new_line_r = terms[0]
        for i in t_column:
            new_line += "\t" + terms[i+1]
            new_line_r += "\t" + terms_r[i+1]
        f_out.write(new_line+'\n')
        f_out_r.write(new_line_r+'\n')

    f_out.close()
    f_out_r.close()
    f_in.close()
    f_in_r.close()


def _main():
    p = OptionParser()
    p.add_option('--i-pore-crd-h', dest='fn_pore_crd_h',
                 default = "pore_axis.txt",
                 help="file name for pore axis coordinates h generated by trachan.")
    p.add_option('--i-pore-crd-r', dest='fn_pore_crd_r',
                 default = "pore_axis_r.txt",
                 help="file name for pore axis coordinates r generated by trachan.")
    p.add_option('--o-pore-crd-atom-h', dest='fn_pore_crd_atom_h',
                 default = "pore_axis.txt",
                 help="file name for pore axis coordinates h only for the specified atom types.")
    p.add_option('--o-pore-crd-atom-r', dest='fn_pore_crd_atom_r',
                 default = "pore_axis_r.txt",
                 help="file name for pore axis coordinates r only for the specified atom types.")

    p.add_option('--atomname', dest='atomnames',
                 action = "append",
                 help="atom name to be extractes.")
    p.add_option('--begin', dest='f_begin',
                 type="int",
                 help="frame to begin")
    p.add_option('--end', dest='f_end',
                 type="int",
                 help="frame to end")
    opts, args = p.parse_args()

    analyze_run(opts.fn_pore_crd_h,
                opts.fn_pore_crd_r,
                opts.fn_pore_crd_atom_h,
                opts.fn_pore_crd_atom_r,
                opts.atomnames,
                opts.f_begin, opts.f_end)


if __name__ == '__main__':
    _main()
